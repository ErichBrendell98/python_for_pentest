"""
Criando um Servidor
Multiplexando usando Select
"""

import socket, select   #select: usada para operações de I/O 
import sys


server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)    #setsockopt:definir opções pra o socket | (SOL_SOCKET & SO_REUSEADDR): para informar que o socket é reusavel  | 1 = True
server.bind(('0.0.0.0', int(sys.argv[1])))
server.listen(10)
connectedHosts = [] #pool para conexões dos clientes
while True:
    read, write, ex = select.select([server] + connectedHosts, [], [])  #read:lista de espera para leitura | write:lista de espera para escrita | ex: lista de exceções 
    skt = read[0]   #lê o índice 0 do socket
    if skt is server:   #se o skt lido for o server => recebeu uma nova comunicação
        (clientSkt, (clientIP, clientPort)) = server.accept()   #aceitando a conexão do cliente => retorna uma tupla com socket do cliente e uma tupla de endereços descompactados em IP e Porta
        print(f'New client connected from {clientIP}:{clientPort}')
        connectedHosts.append((clientSkt, (clientIP, clientPort))) #adicionando o cliente na pool de clientes
    else: #cliente
        data = skt.recv(1024) #recebe o dado do cliente
        if data:    #se != ''
            skt.send(data)  #envia o dado
        else:   #se == ''
            print(f'Client disconnected from server')
            connectedHosts.remove(skt)  #remove o socket client da pool
            skt.close() #encerra a conexão'